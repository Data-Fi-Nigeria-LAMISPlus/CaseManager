[{"C:\\Users\\victor.ajor\\projects\\casemanager\\src\\index.js":"1","C:\\Users\\victor.ajor\\projects\\casemanager\\src\\App.js":"2","C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\jsx\\components\\Home.js":"5","C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\context\\ThemeDemo.js":"6","C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\api.js":"7","C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\jsx\\components\\case_manager\\CaseManagerList.js":"8","C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\jsx\\components\\case_manager\\AddCaseManager.js":"9","C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\jsx\\components\\case_manager\\AssignCaseManager.js":"10","C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\jsx\\components\\patient\\PatientList.js":"11","C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\jsx\\components\\SampleCollection\\SplitActionButton.js":"12","C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\jsx\\components\\case_manager\\EditCaseManager.js":"13"},{"size":672,"mtime":1672751849507,"results":"14","hashOfConfig":"15"},{"size":782,"mtime":1679414169552,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1663251978370,"results":"17","hashOfConfig":"15"},{"size":9235,"mtime":1663251975986,"results":"18","hashOfConfig":"15"},{"size":2110,"mtime":1679489382480,"results":"19","hashOfConfig":"15"},{"size":3056,"mtime":1663251975987,"results":"20","hashOfConfig":"15"},{"size":481,"mtime":1679489482329,"results":"21","hashOfConfig":"15"},{"size":9867,"mtime":1679411941286,"results":"22","hashOfConfig":"15"},{"size":7765,"mtime":1679394105736,"results":"23","hashOfConfig":"15"},{"size":11895,"mtime":1679488759440,"results":"24","hashOfConfig":"15"},{"size":8938,"mtime":1679489011741,"results":"25","hashOfConfig":"15"},{"size":5082,"mtime":1679399002928,"results":"26","hashOfConfig":"15"},{"size":8059,"mtime":1679401581138,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"1uxnb99",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"31"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"31"},"C:\\Users\\victor.ajor\\projects\\casemanager\\src\\index.js",["60"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router } from \"react-router-dom\";\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport ThemeContext from \"./../src/main/webapp/context/ThemeContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <SimpleReactLightbox>\r\n      <BrowserRouter basename=\"/\">\r\n        <ThemeContext>\r\n          <App />\r\n        </ThemeContext>\r\n      </BrowserRouter>\r\n    </SimpleReactLightbox>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",["61","62"],"C:\\Users\\victor.ajor\\projects\\casemanager\\src\\App.js",[],"C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\jsx\\components\\Home.js",["63"],"C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\api.js",[],"C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\jsx\\components\\case_manager\\CaseManagerList.js",["64","65","66","67","68","69","70","71","72","73","74","75"],"import React, { useEffect, useCallback, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport ListIcon from \"@mui/icons-material/List\";\r\nimport AddCaseManager from \"./AddCaseManager\";\r\nimport EditCaseManager from \"./EditCaseManager\";\r\n\r\nimport { MdDashboard, MdDeleteForever, MdModeEdit } from \"react-icons/md\";\r\n\r\nimport SplitActionButton from \"../SampleCollection/SplitActionButton\";\r\n\r\nimport { Badge, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nimport \"../SampleCollection/sample.css\";\r\n\r\nimport { forwardRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { token, url } from \"../../../api\";\r\n\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { FaEye } from \"react-icons/fa\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst CaseManagerList = (props) => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [permissions, setPermissions] = useState([]);\r\n  const [config, setConfig] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addModal, setAddModal] = useState(false);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [caseManager, setCaseManager] = useState({});\r\n\r\n  const toggle = () => setAddModal(!addModal);\r\n\r\n  const toggleEdit = () => setEditModal(!editModal);\r\n\r\n  const toggleDelete = (id) => setModal(!modal);\r\n\r\n  const userPermission = () => {\r\n    axios\r\n      .get(`${url}account`, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((response) => {\r\n        //console.log(\"permission\", response.data.permissions)\r\n        setPermissions(response.data.permissions);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const addCaseManager = () => {\r\n    setAddModal(!addModal);\r\n  };\r\n\r\n  const editCaseManager = (data) => {\r\n    //console.log(data);\r\n    setCaseManager(data);\r\n    setEditModal(!editModal);\r\n  };\r\n\r\n  const onCancelDelete = () => {\r\n    setModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //setLoading(\"true\");\r\n    //userPermission();\r\n  }, []);\r\n\r\n  const handleDelete = () => {};\r\n\r\n  const actionItems = (row) => {\r\n    return [\r\n      {\r\n        name: \"View\",\r\n        type: \"link\",\r\n        icon: <FaEye size=\"22\" />,\r\n        to: {\r\n          pathname: \"/print-manifest\",\r\n          state: { sampleObj: row, permissions: permissions },\r\n        },\r\n      },\r\n      {\r\n        name: \" Edit\",\r\n        type: \"link\",\r\n        icon: <MdModeEdit size=\"20\" color=\"rgb(4, 196, 217)\" />,\r\n        editAction: () => {\r\n          editCaseManager(row);\r\n        },\r\n        to: {\r\n          pathname: \"/#\",\r\n          state: { patientObj: row },\r\n        },\r\n      },\r\n      {\r\n        name: \" Delete\",\r\n        type: \"link\",\r\n        icon: <MdDeleteForever size=\"20\" color=\"rgb(4, 196, 217)\" />,\r\n        deleteAction: () => {\r\n          toggleDelete(row.id);\r\n        },\r\n        to: {\r\n          pathname: \"/#\",\r\n          state: { patientObj: row },\r\n        },\r\n      },\r\n    ];\r\n  };\r\n\r\n  const handlePulledData = (query) =>\r\n    new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`${url}casemanager/list`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((resp) => resp)\r\n        .then((result) => {\r\n          if (result.data === null) {\r\n            resolve({\r\n              data: [],\r\n              page: 0,\r\n              totalCount: 0,\r\n            });\r\n          } else {\r\n            resolve({\r\n              data: result.data.map((row) => ({\r\n                designation: row.designation,\r\n                firstName: row.firstName,\r\n                lastName: row.lastName,\r\n                gender: row.sex,\r\n                phoneNumber: row.phoneNumber,\r\n                actions: (\r\n                  <>\r\n                    <SplitActionButton actions={actionItems(row)} />\r\n                  </>\r\n                ),\r\n              })),\r\n              page: query.page,\r\n              totalCount: result.data.totalRecords,\r\n            });\r\n          }\r\n        });\r\n    });\r\n\r\n  const handleChangePage = (page) => {\r\n    setCurrentPage(page + 1);\r\n  };\r\n\r\n  const localization = {\r\n    pagination: {\r\n      labelDisplayedRows: `Page: ${currentPage}`,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\"float-right mr-1\"\r\n        startIcon={<PersonAddIcon />}\r\n        onClick={addCaseManager}\r\n        style={{\r\n          float: \"right\",\r\n          backgroundColor: \"#014d88\",\r\n          fontWeight: \"bolder\",\r\n          color: \"fff\",\r\n        }}\r\n      >\r\n        <span style={{ textTransform: \"capitalize\" }}>Add Case Manager </span>\r\n      </Button>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Case Managers\"\r\n        columns={[\r\n          { title: \"Designation\", field: \"designation\" },\r\n          { title: \"First Name\", field: \"firstName\" },\r\n          { title: \"Last Name\", field: \"lastName\" },\r\n          { title: \"Gender\", field: \"gender\" },\r\n          { title: \"Phone Number\", field: \"phoneNumber\" },\r\n          { title: \"Action\", field: \"actions\" },\r\n        ]}\r\n        isLoading={loading}\r\n        data={handlePulledData}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n            fontSize: \"16px\",\r\n            padding: \"10px\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          selection: false,\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        localization={localization}\r\n      />\r\n      <AddCaseManager modalstatus={addModal} togglestatus={toggle} />\r\n      <EditCaseManager\r\n        modalstatus={editModal}\r\n        togglestatus={toggleEdit}\r\n        casemanager={caseManager}\r\n      />\r\n\r\n      <Modal isOpen={modal} toggle={onCancelDelete}>\r\n        <ModalHeader toggle={onCancelDelete}>Delete Case Manager</ModalHeader>\r\n        <ModalBody>Are you sure you want to delete this record?</ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" type=\"button\" onClick={handleDelete}>\r\n            Yes\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            type=\"button\"\r\n            onClick={(e) => onCancelDelete()}\r\n          >\r\n            No\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CaseManagerList;\r\n","C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\jsx\\components\\case_manager\\AddCaseManager.js",["76","77","78","79"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormFeedback,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { Alert } from \"reactstrap\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AddCaseManager = (props) => {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState({\r\n    designation: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    sex: \"\",\r\n    phoneNumber: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const addCaseManager = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"data\", data);\r\n\r\n    await axios\r\n      .post(`${baseUrl}casemanager/create`, data, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        toast.success(\"Case manager added successfully\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.error(\"Something went wrong. Please try again... \" + err.message);\r\n      });\r\n\r\n    props.togglestatus();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={props.modalstatus}\r\n        toggle={props.togglestatus}\r\n        className={props.className}\r\n        size=\"lg\"\r\n      >\r\n        <Form>\r\n          <ModalHeader toggle={props.togglestatus}>\r\n            Add Case Manager\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"courierRiderName\" className={classes.label}>\r\n                        Designation <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"designation\"\r\n                        id=\"designation\"\r\n                        value={data.designation}\r\n                        onChange={handleInputChange}\r\n                        className=\"form-control\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"courierRiderName\" className={classes.label}>\r\n                        First Name <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        id=\"firstName\"\r\n                        value={data.firstName}\r\n                        onChange={handleInputChange}\r\n                        className=\"form-control\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"courierRiderName\" className={classes.label}>\r\n                        Last Name <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"lastName\"\r\n                        id=\"lastName\"\r\n                        value={data.lastName}\r\n                        onChange={handleInputChange}\r\n                        className=\"form-control\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"sex\" className={classes.label}>\r\n                        Gender <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        style={{\r\n                          border: \"1px solid #014d88\",\r\n                          borderRadius: \"0px\",\r\n                          fontSize: \"14px\",\r\n                          color: \"#000\",\r\n                        }}\r\n                        name=\"sex\"\r\n                        value={data.sex}\r\n                        id=\"sex\"\r\n                        onChange={handleInputChange}\r\n                      >\r\n                        <option>Select Gender</option>\r\n                        <option>Male</option>\r\n                        <option>Female</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"phoneNumber\" className={classes.label}>\r\n                        Phone Number <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"phoneNumber\"\r\n                        id=\"phoneNumber\"\r\n                        value={data.phoneNumber}\r\n                        onChange={handleInputChange}\r\n                        className=\"form-control\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <br />\r\n                <br />\r\n\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  onClick={addCaseManager}\r\n                >\r\n                  Submit\r\n                </MatButton>\r\n\r\n                <MatButton\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                  onClick={props.togglestatus}\r\n                  className={classes.button}\r\n                  startIcon={<CancelIcon />}\r\n                >\r\n                  Cancel\r\n                </MatButton>\r\n              </CardBody>\r\n            </Card>\r\n          </ModalBody>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCaseManager;\r\n","C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\jsx\\components\\case_manager\\AssignCaseManager.js",["80","81","82","83"],"C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\jsx\\components\\patient\\PatientList.js",["84","85","86","87"],"C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\jsx\\components\\SampleCollection\\SplitActionButton.js",["88"],"import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\r\nimport Grow from \"@mui/material/Grow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Popper from \"@mui/material/Popper\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport MenuList from \"@mui/material/MenuList\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { FaCaretDown } from \"react-icons/fa\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst options = [\"Delete\", \"Edit\"];\r\n\r\nexport default function SplitActionButton(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = useRef(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  const handleClick = () => {\r\n    console.info(`You clicked ${options[selectedIndex]}`);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ButtonGroup\r\n        variant=\"contained\"\r\n        ref={anchorRef}\r\n        style={{\r\n          backgroundColor: \"rgb(153, 46, 98)\",\r\n          height: \"30px\",\r\n          width: \"150px\",\r\n        }}\r\n      >\r\n        <Link\r\n          to={props.actions[0].to}\r\n          style={{ borderRight: \"20px solid #fff !important\" }}\r\n        >\r\n          <Button\r\n            size=\"small\"\r\n            onClick={handleClick}\r\n            variant=\"contained\"\r\n            startIcon={props.actions[0].icon}\r\n            style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n          >\r\n            <Typography variant=\"h7\" style={{ fontWeight: \"bolder\" }}>\r\n              {props.actions[0].name}\r\n            </Typography>\r\n          </Button>\r\n        </Link>\r\n\r\n        <Divider\r\n          orientation=\"vertical\"\r\n          flexItem\r\n          style={{\r\n            borderRight: \"20px solid #fff !important\",\r\n            backgroundColor: \"#fff\",\r\n            width: \"1px\",\r\n            height: \"26px\",\r\n            marginTop: \"2px\",\r\n          }}\r\n        >\r\n          1\r\n        </Divider>\r\n        <Button\r\n          size=\"medium\"\r\n          aria-controls={open ? \"split-button-menu\" : undefined}\r\n          aria-expanded={open ? \"true\" : undefined}\r\n          aria-label=\"select merge strategy\"\r\n          aria-haspopup=\"menu\"\r\n          onClick={handleToggle}\r\n          style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n        >\r\n          <FaCaretDown size=\"24\" />\r\n        </Button>\r\n      </ButtonGroup>\r\n      <Popper\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        role={undefined}\r\n        transition\r\n        disablePortal\r\n        style={{ zIndex: \"10000\" }}\r\n      >\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{\r\n              transformOrigin:\r\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              zIndex: \"1000\",\r\n            }}\r\n          >\r\n            {/*width: 130,*/}\r\n            <Paper\r\n              sx={{\r\n                minWidth: \"130px\",\r\n                maxWidth: \"150px\",\r\n                marginTop: \"2px\",\r\n                zIndex: \"1000\",\r\n              }}\r\n            >\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList id=\"split-button-menu\" autoFocusItem>\r\n                  {props.actions.slice(1).map((option, index) =>\r\n                    option.name === \" Delete\" ? (\r\n                      <MenuItem key={Math.random()}>\r\n                        <Link to={option.to} onClick={option.deleteAction}>\r\n                          {option.icon}\r\n                          <span\r\n                            style={{\r\n                              color: \"rgb(153, 46, 98)\",\r\n                              fontWeight: \"bolder\",\r\n                              fontSize: \"12px\",\r\n                            }}\r\n                          >\r\n                            {option.name}\r\n                          </span>\r\n                        </Link>\r\n                      </MenuItem>\r\n                    ) : (\r\n                      <MenuItem key={Math.random()}>\r\n                        <Link to={option.to} onClick={option.editAction}>\r\n                          {option.icon}\r\n                          <span\r\n                            style={{\r\n                              color: \"rgb(153, 46, 98)\",\r\n                              fontWeight: \"bolder\",\r\n                              fontSize: \"12px\",\r\n                            }}\r\n                          >\r\n                            {option.name}\r\n                          </span>\r\n                        </Link>\r\n                      </MenuItem>\r\n                    )\r\n                  )}\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\victor.ajor\\projects\\casemanager\\src\\main\\webapp\\jsx\\components\\case_manager\\EditCaseManager.js",["89","90","91"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormFeedback,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport UpdateIcon from \"@mui/icons-material/Update\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { Alert } from \"reactstrap\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst EditCaseManager = (props) => {\r\n  const classes = useStyles();\r\n  //console.log(props.casemanager);\r\n\r\n  const [data, setData] = useState({\r\n    designation: props.casemanager?.designation,\r\n    firstName: props.casemanager?.firstName,\r\n    lastName: props.casemanager?.lastName,\r\n    sex: props.casemanager?.sex,\r\n    phoneNumber: props.casemanager?.phoneNumber,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setData(props.casemanager);\r\n  }, [props.casemanager]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const editCaseManager = async (e) => {\r\n    e.preventDefault();\r\n\r\n    //console.log(\"Edit data\", data);\r\n\r\n    await axios\r\n      .put(`${baseUrl}casemanager/update/${props.casemanager.id}`, data, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        toast.success(\"Case manager updated successfully\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.error(\"Something went wrong. Please try again... \" + err.message);\r\n      });\r\n\r\n    props.togglestatus();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={props.modalstatus}\r\n        toggle={props.togglestatus}\r\n        className={props.className}\r\n        size=\"lg\"\r\n      >\r\n        <Form>\r\n          <ModalHeader toggle={props.togglestatus}>\r\n            Edit Case Manager\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"courierRiderName\" className={classes.label}>\r\n                        Designation <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"designation\"\r\n                        id=\"designation\"\r\n                        value={data.designation}\r\n                        onChange={handleInputChange}\r\n                        className=\"form-control\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"courierRiderName\" className={classes.label}>\r\n                        First Name <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        id=\"firstName\"\r\n                        value={data.firstName}\r\n                        onChange={handleInputChange}\r\n                        className=\"form-control\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"courierRiderName\" className={classes.label}>\r\n                        Last Name <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"lastName\"\r\n                        id=\"lastName\"\r\n                        value={data.lastName}\r\n                        onChange={handleInputChange}\r\n                        className=\"form-control\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"sex\" className={classes.label}>\r\n                        Gender <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        style={{\r\n                          border: \"1px solid #014d88\",\r\n                          borderRadius: \"0px\",\r\n                          fontSize: \"14px\",\r\n                          color: \"#000\",\r\n                        }}\r\n                        name=\"sex\"\r\n                        value={data.sex}\r\n                        id=\"sex\"\r\n                        onChange={handleInputChange}\r\n                      >\r\n                        <option>Select Gender</option>\r\n                        <option>Male</option>\r\n                        <option>Female</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"phoneNumber\" className={classes.label}>\r\n                        Phone Number <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"phoneNumber\"\r\n                        id=\"phoneNumber\"\r\n                        value={data.phoneNumber}\r\n                        onChange={handleInputChange}\r\n                        className=\"form-control\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <br />\r\n                <br />\r\n\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<UpdateIcon />}\r\n                  onClick={editCaseManager}\r\n                >\r\n                  Submit\r\n                </MatButton>\r\n\r\n                <MatButton\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                  onClick={props.togglestatus}\r\n                  className={classes.button}\r\n                  startIcon={<CancelIcon />}\r\n                >\r\n                  Cancel\r\n                </MatButton>\r\n              </CardBody>\r\n            </Card>\r\n          </ModalBody>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditCaseManager;\r\n",{"ruleId":"92","severity":1,"message":"93","line":4,"column":41,"nodeType":"94","messageId":"95","endLine":4,"endColumn":47},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"92","severity":1,"message":"100","line":18,"column":10,"nodeType":"94","messageId":"95","endLine":18,"endColumn":21},{"ruleId":"92","severity":1,"message":"101","line":1,"column":28,"nodeType":"94","messageId":"95","endLine":1,"endColumn":39},{"ruleId":"92","severity":1,"message":"102","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":18},{"ruleId":"92","severity":1,"message":"103","line":7,"column":8,"nodeType":"94","messageId":"95","endLine":7,"endColumn":16},{"ruleId":"92","severity":1,"message":"104","line":8,"column":8,"nodeType":"94","messageId":"95","endLine":8,"endColumn":16},{"ruleId":"92","severity":1,"message":"105","line":12,"column":10,"nodeType":"94","messageId":"95","endLine":12,"endColumn":21},{"ruleId":"92","severity":1,"message":"106","line":16,"column":10,"nodeType":"94","messageId":"95","endLine":16,"endColumn":15},{"ruleId":"92","severity":1,"message":"107","line":22,"column":10,"nodeType":"94","messageId":"95","endLine":22,"endColumn":15},{"ruleId":"92","severity":1,"message":"108","line":112,"column":9,"nodeType":"94","messageId":"95","endLine":112,"endColumn":16},{"ruleId":"92","severity":1,"message":"109","line":113,"column":19,"nodeType":"94","messageId":"95","endLine":113,"endColumn":29},{"ruleId":"92","severity":1,"message":"110","line":115,"column":10,"nodeType":"94","messageId":"95","endLine":115,"endColumn":16},{"ruleId":"92","severity":1,"message":"111","line":115,"column":18,"nodeType":"94","messageId":"95","endLine":115,"endColumn":27},{"ruleId":"92","severity":1,"message":"112","line":128,"column":9,"nodeType":"94","messageId":"95","endLine":128,"endColumn":23},{"ruleId":"92","severity":1,"message":"113","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"114","line":7,"column":3,"nodeType":"94","messageId":"95","endLine":7,"endColumn":15},{"ruleId":"92","severity":1,"message":"115","line":20,"column":10,"nodeType":"94","messageId":"95","endLine":20,"endColumn":15},{"ruleId":"92","severity":1,"message":"116","line":21,"column":10,"nodeType":"94","messageId":"95","endLine":21,"endColumn":17},{"ruleId":"92","severity":1,"message":"101","line":1,"column":28,"nodeType":"94","messageId":"95","endLine":1,"endColumn":39},{"ruleId":"92","severity":1,"message":"107","line":8,"column":10,"nodeType":"94","messageId":"95","endLine":8,"endColumn":15},{"ruleId":"92","severity":1,"message":"117","line":85,"column":9,"nodeType":"94","messageId":"95","endLine":85,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":157,"column":6,"nodeType":"120","endLine":157,"endColumn":8,"suggestions":"121"},{"ruleId":"92","severity":1,"message":"101","line":1,"column":28,"nodeType":"94","messageId":"95","endLine":1,"endColumn":39},{"ruleId":"92","severity":1,"message":"107","line":12,"column":10,"nodeType":"94","messageId":"95","endLine":12,"endColumn":15},{"ruleId":"92","severity":1,"message":"109","line":56,"column":19,"nodeType":"94","messageId":"95","endLine":56,"endColumn":29},{"ruleId":"122","severity":1,"message":"123","line":142,"column":30,"nodeType":"124","messageId":"125","endLine":142,"endColumn":32},{"ruleId":"92","severity":1,"message":"126","line":21,"column":25,"nodeType":"94","messageId":"95","endLine":21,"endColumn":41},{"ruleId":"92","severity":1,"message":"114","line":7,"column":3,"nodeType":"94","messageId":"95","endLine":7,"endColumn":15},{"ruleId":"92","severity":1,"message":"115","line":20,"column":10,"nodeType":"94","messageId":"95","endLine":20,"endColumn":15},{"ruleId":"92","severity":1,"message":"116","line":21,"column":10,"nodeType":"94","messageId":"95","endLine":21,"endColumn":17},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"'permissions' is assigned a value but never used.","'useCallback' is defined but never used.","'DeleteIcon' is defined but never used.","'EditIcon' is defined but never used.","'ListIcon' is defined but never used.","'MdDashboard' is defined but never used.","'Badge' is defined but never used.","'toast' is defined but never used.","'classes' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'config' is assigned a value but never used.","'setConfig' is assigned a value but never used.","'userPermission' is assigned a value but never used.","'useEffect' is defined but never used.","'FormFeedback' is defined but never used.","'Alert' is defined but never used.","'Spinner' is defined but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStates'. Either include it or remove the dependency array.","ArrayExpression",["129"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setSelectedIndex' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [getStates]",{"range":"132","text":"133"},[3869,3871],"[getStates]"]